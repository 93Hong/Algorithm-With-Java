package Controller;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import ModelImplement.Board;
import Service.BfsAlgorithm;

public class KnightMove {
	public void solveKnight() {

		Board chessBoard = new Board(Integer.parseInt(sub[0]), Integer.parseInt(sub[1]));
		int numOfVisitedSpace = new BfsAlgorithm().solveKnight(0, 0, chessBoard);

		boolean isAllVisited = numOfVisitedSpace == chessBoard.getM() * chessBoard.getN();

		if (isAllVisited) {
			System.out.println("T" + chessBoard.getMaxDepth());
		} else {
			System.out.println("F" + chessBoard.getMaxDepth());
		}

	}

	public String[] readData() {
		String sub[] = null;
		try {
			BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
			sub = br.readLine().split(" ");
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return sub;
	}
}
