package Controller;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import ModelImplement.Board;
import Service.BfsAlgorithm;

public class KnightMove {
	public void solveKnight() {
		try {
			

			Board chessBoard = new Board(Integer.parseInt(sub[0]), Integer.parseInt(sub[1]));
			int numOfVisitedSpace = new BfsAlgorithm().solveKnight(0, 0, chessBoard);

			boolean isAllVisited = numOfVisitedSpace == chessBoard.getM() * chessBoard.getN();

			if (isAllVisited) {
				System.out.println("T" + chessBoard.getMaxDepth());
			} else {
				System.out.println("F" + chessBoard.getMaxDepth());
			}

		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public String[] readData() {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String sub[];
		sub = br.readLine().split(" ");
	}
}
